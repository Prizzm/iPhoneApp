//
//  ListHelper.m
//  MightBuy
//
//  Created by Sam Baumgarten on 9/7/12.
//  Copyright (c) 2012 Makrr. All rights reserved.
//

#import "ListHelper.h"

@implementation ListHelper

/// This method adds the data returned from the MightBuy API to a new user record (local) generated by the sender
+(void)insertNewRecordFields:(NSManagedObject *)userObj andData:(NSDictionary *)d andAuthToken:(NSString *)authToken andContect:(NSManagedObjectContext *)context {
    // Set the auth token
    [userObj setValue:authToken forKey:@"authentication_token"];
    
    // Set the other fields from response
    if ([d objectForKey:@"id"] && [d objectForKey:@"id"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"id"] forKey:@"id"];
    }
    if ([d objectForKey:@"email"] && [d objectForKey:@"email"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"email"] forKey:@"email"];
    }
    if ([d objectForKey:@"reset_password_token"] && [d objectForKey:@"reset_password_token"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"reset_password_token"] forKey:@"reset_password_token"];
    }
    if ([d objectForKey:@"reset_password_sent_at"] && [d objectForKey:@"reset_password_sent_at"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"reset_password_sent_at"] forKey:@"reset_password_sent_at"];
    }
    if ([d objectForKey:@"remember_created_at"] && [d objectForKey:@"remember_created_at"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"remember_created_at"] forKey:@"remember_created_at"];
    }
    if ([d objectForKey:@"sign_in_count"] && [d objectForKey:@"sign_in_count"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"sign_in_count"] forKey:@"sign_in_count"];
    }
    if ([d objectForKey:@"current_sign_in_at"] && [d objectForKey:@"current_sign_in_at"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"current_sign_in_at"] forKey:@"current_sign_in_at"];
    }
    if ([d objectForKey:@"last_sign_in_at"] && [d objectForKey:@"last_sign_in_at"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"last_sign_in_at"] forKey:@"last_sign_in_at"];
    }
    if ([d objectForKey:@"current_sign_in_ip"] && [d objectForKey:@"current_sign_in_ip"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"current_sign_in_ip"] forKey:@"current_sign_in_ip"];
    }
    if ([d objectForKey:@"last_sign_in_ip"] && [d objectForKey:@"last_sign_in_ip"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"last_sign_in_ip"] forKey:@"last_sign_in_ip"];
    }
    if ([d objectForKey:@"name"] && [d objectForKey:@"name"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"name"] forKey:@"name"];
    }
    if ([d objectForKey:@"created_at"] && [d objectForKey:@"created_at"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"created_at"] forKey:@"created_at"];
    }
    if ([d objectForKey:@"updated_at"] && [d objectForKey:@"updated_at"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"updated_at"] forKey:@"updated_at"];
    }
    if ([d objectForKey:@"url"] && [d objectForKey:@"url"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"url"] forKey:@"url"];
    }
    if ([d objectForKey:@"description_"] && [d objectForKey:@"description_"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"description_"] forKey:@"description_s"];
    }
    if ([d objectForKey:@"facebook"] && [d objectForKey:@"facebook"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"facebook"] forKey:@"facebook"];
    }
    if ([d objectForKey:@"twitter"] && [d objectForKey:@"twitter"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"twitter"] forKey:@"twitter"];
    }
    if ([d objectForKey:@"phone"] && [d objectForKey:@"phone"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"phone"] forKey:@"phone"];
    }
    if ([d objectForKey:@"email_address"] && [d objectForKey:@"email_address"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"email_address"] forKey:@"email_address"];
    }
    if ([d objectForKey:@"category"] && [d objectForKey:@"category"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"category"] forKey:@"category"];
    }
    if ([d objectForKey:@"image_uid"] && [d objectForKey:@"image_uid"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"image_uid"] forKey:@"image_uid"];
    }
    if ([d objectForKey:@"facebook_uid"] && [d objectForKey:@"facebook_uid"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"facebook_uid"] forKey:@"facebook_uid"];
    }
    if ([d objectForKey:@"twitter_uid"] && [d objectForKey:@"twitter_uid"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"twitter_uid"] forKey:@"twitter_uid"];
    }
    if ([d objectForKey:@"facebook_oauth_token"] && [d objectForKey:@"facebook_oauth_token"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"facebook_oauth_token"] forKey:@"facebook_oauth_token"];
    }
    if ([d objectForKey:@"twitter_oauth_token"] && [d objectForKey:@"twitter_oauth_token"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"twitter_oauth_token"] forKey:@"twitter_oauth_token"];
    }
    if ([d objectForKey:@"twitter_oauth_secret"] && [d objectForKey:@"twitter_oauth_secret"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"twitter_oauth_secret"] forKey:@"twitter_oauth_secret"];
    }
    if ([d objectForKey:@"last_seen"] && [d objectForKey:@"last_seen"] != [NSNull null]) {
        [userObj setValue:[d objectForKey:@"last_seen"] forKey:@"last_seen"];
    }
    
    NSMutableArray *topicsSet = [[NSMutableArray alloc] init];
    
    // Create Topics
    for (NSDictionary *topic in [d objectForKey:@"topics"]) {
        // Create a fetch request to see if User exists
        NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];
        // Create a NSEntityDescription so the fetch request knows where to look
        NSEntityDescription *obj = [NSEntityDescription entityForName:@"Topic" inManagedObjectContext:context];
        // Set the NSEntityDescription as the entity of the fetch request
        [fetchRequest setEntity:obj];
        
        NSManagedObject *topicObj = [NSEntityDescription
                                        insertNewObjectForEntityForName:@"Topic"
                                        inManagedObjectContext:context];
        [topicObj setValue:[topic objectForKey:@"id"] forKey:@"id"];
        [topicObj setValue:[topic objectForKey:@"id"] forKey:@"sort_id"];
        [topicObj setValue:[topic objectForKey:@"access"] forKey:@"access"];
        if ([topic objectForKey:@"body"] && [topic objectForKey:@"body"] != [NSNull null]) {
            [topicObj setValue:[topic objectForKey:@"body"] forKey:@"body"];
        }
        [topicObj setValue:[topic objectForKey:@"created_at"] forKey:@"created_at"];
        if ([topic objectForKey:@"price"] && [topic objectForKey:@"price"] != [NSNull null]) {
            [topicObj setValue:[topic objectForKey:@"price"] forKey:@"price"];
        }
        [topicObj setValue:[topic objectForKey:@"shortcode"] forKey:@"shortcode"];
        [topicObj setValue:[topic objectForKey:@"subject"] forKey:@"subject"];
        [topicObj setValue:[topic objectForKey:@"image_url"] forKey:@"image_url"];
        
        NSFetchRequest *fetchRequestt = [[NSFetchRequest alloc] init];
        // Create a NSEntityDescription so the fetch request knows where to look
        NSEntityDescription *objt = [NSEntityDescription entityForName:@"Topic" inManagedObjectContext:context];
        // Set the NSEntityDescription as the entity of the fetch request
        [fetchRequestt setEntity:objt];

        
        [topicsSet addObject:topicObj];
        
        
        [topicObj setValue:userObj forKey:@"user"];
    }
    [userObj setValue:[NSSet setWithArray:topicsSet] forKey:@"topics"];
    // Create a NSError and set it to nil
    NSError *error = nil;
    // Check if managedObjectContext exists
    if (context != nil) {
        // If it does check if it has changed and if there are any errors when it is saved
        if ([context hasChanges] && ![context save:&error]) {
            // If there is a error when saving, this is called
            NSLog(@"Unresolved error %@, %@", error, [error userInfo]);
            abort();
        }
    }
}

+(void)deleteUsersWithContext:(NSManagedObjectContext *)context {
    // Create a fetch request to see if User exists
    NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];
    // Create a NSEntityDescription so the fetch request knows where to look
    NSEntityDescription *obj = [NSEntityDescription entityForName:@"User" inManagedObjectContext:context];
    // Set the NSEntityDescription as the entity of the fetch request
    [fetchRequest setEntity:obj];

    NSError * error = nil;
    NSArray * topics = [context executeFetchRequest:fetchRequest error:&error];

    if (error) {
        NSLog(@"error: %@", error);
    } else {
        NSLog(@"no error");
    }
    for (id basket in topics) {
        [context deleteObject:basket];
    }
}

+(void)deleteTopicsWithContext:(NSManagedObjectContext *)context {
    // Create a fetch request to see if User exists
    NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];
    // Create a NSEntityDescription so the fetch request knows where to look
    NSEntityDescription *obj = [NSEntityDescription entityForName:@"Topic" inManagedObjectContext:context];
    // Set the NSEntityDescription as the entity of the fetch request
    [fetchRequest setEntity:obj];
    
    NSError * error = nil;
    NSArray * topics = [context executeFetchRequest:fetchRequest error:&error];
    
    if (error) {
        NSLog(@"error: %@", error);
    } else {
        NSLog(@"no error");
    }
    for (id basket in topics) {
        [context deleteObject:basket];
    }
}

+(void)updateUserFields:(User *)user andData:(NSDictionary *)d andAuthToken:(NSString *)authToken andContect:(NSManagedObjectContext *)context {
    [ListHelper deleteTopicsWithContext:context];
    [ListHelper deleteUsersWithContext:context];
    
    NSManagedObject *userObj = [NSEntityDescription
                                insertNewObjectForEntityForName:@"User"
                                inManagedObjectContext:context];
    [ListHelper insertNewRecordFields:userObj andData:d andAuthToken:authToken andContect:context];
}
///// This method updates the current user (local) with the data returned from the MightBuy API
//+(void)updateUserFields:(User *)user andData:(NSDictionary *)d andAuthToken:(NSString *)authToken andContect:(NSManagedObjectContext *)context {
//    NSManagedObject *userObj = [[user managedObjectContext] existingObjectWithID:[user objectID] error:nil];
//    [userObj setValue:authToken forKey:@"authentication_token"];
//    NSLog(@"d");
//    // Set the other fields from response
//    if ([d objectForKey:@"id"] && [d objectForKey:@"id"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"id"] forKey:@"id"];
//    }
//    if ([d objectForKey:@"email"] && [d objectForKey:@"email"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"email"] forKey:@"email"];
//    }
//    if ([d objectForKey:@"reset_password_token"] && [d objectForKey:@"reset_password_token"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"reset_password_token"] forKey:@"reset_password_token"];
//    }
//    if ([d objectForKey:@"reset_password_sent_at"] && [d objectForKey:@"reset_password_sent_at"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"reset_password_sent_at"] forKey:@"reset_password_sent_at"];
//    }
//    if ([d objectForKey:@"remember_created_at"] && [d objectForKey:@"remember_created_at"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"remember_created_at"] forKey:@"remember_created_at"];
//    }
//    if ([d objectForKey:@"sign_in_count"] && [d objectForKey:@"sign_in_count"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"sign_in_count"] forKey:@"sign_in_count"];
//    }
//    if ([d objectForKey:@"current_sign_in_at"] && [d objectForKey:@"current_sign_in_at"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"current_sign_in_at"] forKey:@"current_sign_in_at"];
//    }
//    if ([d objectForKey:@"last_sign_in_at"] && [d objectForKey:@"last_sign_in_at"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"last_sign_in_at"] forKey:@"last_sign_in_at"];
//    }
//    if ([d objectForKey:@"current_sign_in_ip"] && [d objectForKey:@"current_sign_in_ip"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"current_sign_in_ip"] forKey:@"current_sign_in_ip"];
//    }
//    if ([d objectForKey:@"last_sign_in_ip"] && [d objectForKey:@"last_sign_in_ip"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"last_sign_in_ip"] forKey:@"last_sign_in_ip"];
//    }
//    if ([d objectForKey:@"name"] && [d objectForKey:@"name"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"name"] forKey:@"name"];
//    }
//    if ([d objectForKey:@"created_at"] && [d objectForKey:@"created_at"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"created_at"] forKey:@"created_at"];
//    }
//    if ([d objectForKey:@"updated_at"] && [d objectForKey:@"updated_at"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"updated_at"] forKey:@"updated_at"];
//    }
//    if ([d objectForKey:@"url"] && [d objectForKey:@"url"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"url"] forKey:@"url"];
//    }
//    if ([d objectForKey:@"description_"] && [d objectForKey:@"description_"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"description_"] forKey:@"description_s"];
//    }
//    if ([d objectForKey:@"facebook"] && [d objectForKey:@"facebook"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"facebook"] forKey:@"facebook"];
//    }
//    if ([d objectForKey:@"twitter"] && [d objectForKey:@"twitter"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"twitter"] forKey:@"twitter"];
//    }
//    if ([d objectForKey:@"phone"] && [d objectForKey:@"phone"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"phone"] forKey:@"phone"];
//    }
//    if ([d objectForKey:@"email_address"] && [d objectForKey:@"email_address"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"email_address"] forKey:@"email_address"];
//    }
//    if ([d objectForKey:@"category"] && [d objectForKey:@"category"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"category"] forKey:@"category"];
//    }
//    if ([d objectForKey:@"image_uid"] && [d objectForKey:@"image_uid"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"image_uid"] forKey:@"image_uid"];
//    }
//    if ([d objectForKey:@"facebook_uid"] && [d objectForKey:@"facebook_uid"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"facebook_uid"] forKey:@"facebook_uid"];
//    }
//    if ([d objectForKey:@"twitter_uid"] && [d objectForKey:@"twitter_uid"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"twitter_uid"] forKey:@"twitter_uid"];
//    }
//    if ([d objectForKey:@"facebook_oauth_token"] && [d objectForKey:@"facebook_oauth_token"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"facebook_oauth_token"] forKey:@"facebook_oauth_token"];
//    }
//    if ([d objectForKey:@"twitter_oauth_token"] && [d objectForKey:@"twitter_oauth_token"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"twitter_oauth_token"] forKey:@"twitter_oauth_token"];
//    }
//    if ([d objectForKey:@"twitter_oauth_secret"] && [d objectForKey:@"twitter_oauth_secret"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"twitter_oauth_secret"] forKey:@"twitter_oauth_secret"];
//    }
//    if ([d objectForKey:@"last_seen"] && [d objectForKey:@"last_seen"] != [NSNull null]) {
//        [userObj setValue:[d objectForKey:@"last_seen"] forKey:@"last_seen"];
//    }
//    
//    
//    // Create a fetch request to see if User exists
//    NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];
//    // Create a NSEntityDescription so the fetch request knows where to look
//    NSEntityDescription *obj = [NSEntityDescription entityForName:@"Topic" inManagedObjectContext:context];
//    // Set the NSEntityDescription as the entity of the fetch request
//    [fetchRequest setEntity:obj];
//    
//    NSArray *result = [context executeFetchRequest:fetchRequest error:nil];
//    for (id basket in result) {
//        [context deleteObject:basket];
//    }
//    
//    NSMutableArray *topicsSet = [[NSMutableArray alloc] init];
//    
//    // Create Topics
//    for (NSDictionary *topic in [d objectForKey:@"topics"]) {
//        // Create a fetch request to see if User exists
//        NSFetchRequest *fetchRequest = [[NSFetchRequest alloc] init];
//        // Create a NSEntityDescription so the fetch request knows where to look
//        NSEntityDescription *obj = [NSEntityDescription entityForName:@"Topic" inManagedObjectContext:context];
//        // Set the NSEntityDescription as the entity of the fetch request
//        [fetchRequest setEntity:obj];
//        
//        NSManagedObject *topicObj = [NSEntityDescription
//                                     insertNewObjectForEntityForName:@"Topic"
//                                     inManagedObjectContext:context];
//        [topicObj setValue:[topic objectForKey:@"id"] forKey:@"id"];
//        [topicObj setValue:[topic objectForKey:@"id"] forKey:@"sort_id"];
//        [topicObj setValue:[topic objectForKey:@"access"] forKey:@"access"];
//        if ([topic objectForKey:@"body"] && [topic objectForKey:@"body"] != [NSNull null]) {
//            [topicObj setValue:[topic objectForKey:@"body"] forKey:@"body"];
//        }
//        [topicObj setValue:[topic objectForKey:@"created_at"] forKey:@"created_at"];
//        if ([topic objectForKey:@"price"] && [topic objectForKey:@"price"] != [NSNull null]) {
//            [topicObj setValue:[topic objectForKey:@"price"] forKey:@"price"];
//        }
//        [topicObj setValue:[topic objectForKey:@"shortcode"] forKey:@"shortcode"];
//        [topicObj setValue:[topic objectForKey:@"subject"] forKey:@"subject"];
//        [topicObj setValue:[topic objectForKey:@"image_url"] forKey:@"image_url"];
//        
//        NSFetchRequest *fetchRequestt = [[NSFetchRequest alloc] init];
//        // Create a NSEntityDescription so the fetch request knows where to look
//        NSEntityDescription *objt = [NSEntityDescription entityForName:@"Topic" inManagedObjectContext:context];
//        // Set the NSEntityDescription as the entity of the fetch request
//        [fetchRequestt setEntity:objt];
//        
//        
//        [topicsSet addObject:topicObj];
//        
//        
//        [topicObj setValue:userObj forKey:@"user"];
//        NSLog(@"topicOBJ: %@", topicObj);
//        
//    }
//    [userObj setValue:[NSSet setWithArray:topicsSet] forKey:@"topics"];
//    
//    NSError *errors;
//    [context save:&errors];
//    
//    NSLog(@"errors: %@", [errors debugDescription]);
//    
//    
//    [context processPendingChanges];
//    
//    NSError *error = nil;
//    // Check if managedObjectContext exists
//    if (context != nil) {
//        // If it does check if it has changed and if there are any errors when it is saved
//        if ([context hasChanges] && ![context save:&error]) {
//            // If there is a error when saving, this is called
//            NSLog(@"Unresolved error %@, %@", error, [error userInfo]);
//            abort();
//        }
//    }
//
//}

@end
